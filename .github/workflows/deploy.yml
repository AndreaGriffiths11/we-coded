name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  # Enable manual trigger from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Try to debug filesystem
      - name: Show repo content
        run: |
          pwd
          ls -la
          echo "Checking if next.config.mjs exists:"
          ls -la next.config.mjs || echo "next.config.mjs not found"
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      
      - name: Ensure next.config.mjs exists
        run: |
          if [ ! -f "next.config.mjs" ]; then
            echo "Creating next.config.mjs"
            cat > next.config.mjs << 'EOL'
            /** @type {import('next').NextConfig} */
            const nextConfig = {
              output: 'export',
              basePath: process.env.NODE_ENV === 'production' ? '/we-coded' : '',
              images: {
                unoptimized: true,
              },
              reactStrictMode: true,
            };
            
            export default nextConfig;
            EOL
            echo "Created next.config.mjs:"
            cat next.config.mjs
          else
            echo "next.config.mjs exists, ensuring it has correct export settings"
            grep -q "output: 'export'" next.config.mjs || sed -i "s/const nextConfig = {/const nextConfig = {\n  output: 'export',/" next.config.mjs
            cat next.config.mjs
          fi
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build with Next.js
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Current directory: $(pwd)"
          
          # First, make sure package.json has the correct build script
          sed -i 's/"build": "next build && next export"/"build": "next build"/g' package.json || echo "No change needed in package.json"
          
          # Run the build
          npm run build
          
          echo "After build directory contents:"
          ls -la
          
          # Check if .next directory exists
          if [ -d "./.next" ]; then
            echo "Contents of .next directory:"
            ls -la ./.next
          fi
      
      - name: Create .nojekyll file
        run: |
          # Check if out directory exists and create .nojekyll
          if [ -d "./out" ]; then
            touch ./out/.nojekyll
            echo "Created .nojekyll file in out directory"
            echo "Contents of out directory:"
            ls -la ./out
          else
            echo "out directory not found, checking if it's in a different location"
            find . -type d -name "out" -o -name ".next" | xargs ls -la
            
            # Try to manually create the out directory if it doesn't exist
            echo "Creating out directory manually"
            mkdir -p out
            touch out/.nojekyll
            
            # If .next exists, try to copy contents
            if [ -d "./.next" ]; then
              cp -r ./.next/static out/ || echo "Failed to copy .next/static"
              # Create a basic index.html
              echo "<html><head><meta http-equiv='refresh' content='0;URL=/we-coded'></head><body>Redirecting...</body></html>" > out/index.html
            else
              # Create a basic HTML file as fallback
              echo "<html><body><h1>WeCoded</h1><p>Site is being built. Please check back later.</p></body></html>" > out/index.html
            fi
            
            echo "Created fallback out directory with contents:"
            ls -la ./out
          fi
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4